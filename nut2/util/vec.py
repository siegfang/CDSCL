
import numpy as np
from .. import bolt

class VecConverter:
    """
    """
    def __init__(self, s_ivoc, t_ivoc, s_word2vec, t_word2vec):

        self.seg = max(s_ivoc.keys())
        self.s_ivoc = s_ivoc
        self.t_ivoc = t_ivoc
        self.s_model = s_word2vec
        self.t_model = t_word2vec

    def vec(self, wi):
        if wi <= self.seg:
            return self.s_model[self.s_ivoc[wi]]
        else:
            return self.t_model[self.t_ivoc[wi]]

    def instance2vec(self, dataset, mask):
        """Convert the frequency vector of document to vector
        generated by word2vec
        """
        dim = self.model.layer1_size
        instances = []
        for x in dataset.instances:
            vec = np.zeros(dim)
            for wi, freq in x["f0"]:
                if mask[wi] == 0: continue
                vec += self.vec(wi) * freq
            instances.append(x)

        instances = bolt.io.fromlist(instances, np.object)
        classes = np.unique(dataset.labels)
        return bolt.MemoryDataset(dim, instances, dataset.labels), classes